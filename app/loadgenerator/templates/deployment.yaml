apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: {{ .Values.annotations.istioHTTPProbers }}
    spec:
      serviceAccountName: {{ .Values.spec.serviceAccountName }}
      terminationGracePeriodSeconds: {{ .Values.spec.terminationGracePeriodSeconds }}
      restartPolicy: {{ .Values.spec.restartPolicy }}
      initContainers:
      - command:
        - /bin/sh
        - -exc
        - |
          echo "Init container pinging frontend: ${FRONTEND_ADDR}..."
          STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
          if test $STATUSCODE -ne 200; then
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              exit 1
          fi
        name: {{ .Values.spec.initContainers.name }}
        image: {{ .Values.spec.initContainers.image }}
        env:
        - name: {{ .Values.spec.env.name }}
          value: {{ .Values.spec.env.value }}
      containers:
      - name: {{ .Values.containers.name }}
        image: {{ .Values.containers.image }}
        env:
        - name: {{ .Values.containers.env.name }}
          value: {{ .Values.containers.env.value }}
        - name: {{ .Values.containers.env.name1 }}
          value: {{ .Values.containers.env.value1 }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}